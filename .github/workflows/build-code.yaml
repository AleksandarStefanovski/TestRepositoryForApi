name: Build
on:
  push:
    branches: [main]
env:

  BASE_VERSION: "1.0"
jobs:
  install_tools:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install openapi tools
        run: |
          dotnet tool install --global Swashbuckle.AspNetCore.Cli
          npm install @openapitools/openapi-generator-cli -g

  generate_sdks:
    runs-on: ubuntu-latest
    needs: [install_tools]
    strategy:
      matrix:
        project: 
          - projectFile: WeatherApi/WeatherApi.csproj
          - projectFile: AnotherApi/AnotherApi.csproj
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Build solution
        run: dotnet build ${{ matrix.project }}

      - name: Create temporary directory
        id: temp_dir
        run: echo "::set-output name=dir::$(mktemp -d)"

      - name: Client sdk generating
        run: |
          swagger tofile --output "${{ steps.temp_dir.outputs.dir }}/swagger.json" "${{ matrix.project }}" ${{env.BASE_VERSION}}
          openapi-generator-cli generate -i "${{ steps.temp_dir.outputs.dir }}/swagger.json" -g csharp -o "${{ steps.temp_dir.outputs.dir }}/${{ matrix.project }}/Client.Sdk" --additional-properties targetFramework=net8.0 --additional-properties packageName="${{ matrix.project }}.Client --additional-properties packageVersion=${{env.BASE_VERSION}}"
          dotnet restore "${{ steps.temp_dir.outputs.dir }}/${{ matrix.project }}/Client.Sdk"
          dotnet build "${{ steps.temp_dir.outputs.dir }}/${{ matrix.project }}/Client.Sdk"

      - name: Publish SDK to NuGet
        run: |
          dotnet nuget add source --username AleksandarStefanovski --password ${{ secrets.ApiKey }} --store-password-in-clear-text --name WeatherApiSource "https://nuget.pkg.github.com/AleksandarStefanovski/index.json"
          cd "${{ steps.temp_dir.outputs.dir }}/${{ matrix.project }}/Client.Sdk"
          dotnet pack --configuration Release
          dotnet nuget push "${{ steps.temp_dir.outputs.dir }}/${{ matrix.project }}/Client.Sdk/src/${{ matrix.project }}/Client/bin/Release/*.nupkg" --api-key ${{ secrets.ApiKey }} --source ${{ matrix.project.publish-tag }}
